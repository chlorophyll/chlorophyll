def lerp(v1, v2, pct):
    return list(v1[i] + pct*(v2[i] - v1[i]) for i in xrange(3))

hubs = [
    (-102.337,  267.923, -177.254),
    (-102.337,  267.923,  177.254),
    ( 204.676,  267.923,     0.00),
    ( 165.586,   63.248, -286.803),
    (-165.586,  -63.248, -286.803),
    (-331.171,   63.249,     0.00),
    (-165.586,  -63.248,  286.803),
    ( 165.586,   63.248,  286.803),
    ( 331.171,  -63.249,     0.00),
    ( 102.337, -267.923, -177.254),
    (-204.676, -267.923,     0.00),
    ( 102.337, -267.923,  177.254),
]

edges = [
    ( 0, 1), ( 0, 2), ( 0, 3), ( 0, 4), ( 0, 5),
    ( 1, 2), ( 2, 3), ( 3, 4), ( 4, 5), ( 5, 1),
    ( 1, 6), ( 1, 7), ( 2, 7), ( 2, 8), ( 3, 8), ( 3, 9), ( 4, 9), ( 4,10), ( 5,10), ( 5, 6),
    ( 6, 7), ( 7, 8), ( 8, 9), ( 9,10), (10, 6),
    ( 6,11), ( 7,11), ( 8,11), ( 9,11), (10,11),
]

faces = [
    (0,1,2),
    (0,2,3),
    (0,3,4),
    (0,4,5),
    (0,5,1),

    (1,6,7),
    (1,2,7),
    (2,7,8),
    (2,3,8),
    (3,8,9),
    (3,4,9),
    (4,9,10),
    (4,5,10),
    (5,6,10),
    (5,6,1),

    (6,7,11),
    (7,8,11),
    (8,9,11),
    (9,10,11),
    (10,6,11),
]

def centroid(v1, v2, v3):
    return tuple((v1[i] + v2[i] + v3[i])/3 for i in xrange(3))

def scale(v1, v2, v3):
    c = centroid(v1, v2, v3)
    v1n = tuple(c[i] + (v1[i]-c[i])*0.9 for i in xrange(3))
    v2n = tuple(c[i] + (v2[i]-c[i])*0.9 for i in xrange(3))
    v3n = tuple(c[i] + (v3[i]-c[i])*0.9 for i in xrange(3))

    return v1n, v2n, v3n

pixels = []

for a, b, c in faces:
    va, vb, vc = scale(hubs[a], hubs[b], hubs[c])

    for p in xrange(1, 17):
        pixels.append(lerp(va, vb, p / 17.0))
        pixels.append(lerp(vb, vc, p / 17.0))
        pixels.append(lerp(vc, va, p / 17.0))

import json
print json.dumps(pixels)
